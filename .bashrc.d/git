#!/bin/bash

# shellcheck disable=2120
git_forked_from() {
  local BRANCH=${1-origin/master}
  git merge-base "$BRANCH" HEAD
}
alias gff='git show $(git_forked_from)'

git_files_changed() {
  local BRANCH=${1:-origin/master}
  (
    set -e;
    FORK_SHA=$(git merge-base "$BRANCH" HEAD);
    git diff-tree --name-only -r "$FORK_SHA" HEAD;
  );
}

git_recent_branches() {
  git for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:cyan)%(refname:short)%(color:reset) | %(committerdate:relative)%(color:reset) | %(subject)' | column -s '|' -t
}
alias grb="git_recent_branches | head -20"

git_rebase_i_from_forked_from() {
  printf "Rebasing from:\n  "
  local GIT_FORKED_FROM;
  GIT_FORKED_FROM=$(git_forked_from)
  git show --format=oneline "$GIT_FORKED_FROM"
  git rebase -i "$GIT_FORKED_FROM"
}
alias gri="git_rebase_i_from_forked_from"

# Cherry-pick last commit to multiple branches
function git_cherry-pick_to() {
  local sha;
  sha=`git rev-parse HEAD`
  for branch in "$@"; do
    git checkout "$branch"
    git cherry-pick "$sha"
  done
}
