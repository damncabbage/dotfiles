#!/usr/bin/env bash
set -eu

# With credit to https://github.com/quintrino/dotfiles/blob/master/config/git/cc_menu
cc_menu() {
  local origin=$1
  local push_url=$2

  # WARNING: These variables need to be declared separately.
  local bk_token=$CC_BUILDKITE_TOKEN # A Buildkite API Access Token with at least read_builds access.
  local bk_org=$CC_BUILDKITE_ORG # The Buildkite org slug, eg. "couture-animer"
  local gh_org=$CC_GITHUB_ORG # The GitHub org slug, eg. "coutureanimer"

  local push_org=$(cut -f2 -d':' <<<"$(dirname "$(git config --get remote.origin.url)")") # cursed
  local push_repo=$(basename -s .git "$(git config --get remote.origin.url)")

  # Our Buildkite slug names are inconsistent; we can sensibly default to foo_bar -> foo-bar,
  # but that's about it. Use a file in case we need to override it per-repo.
  local bk_slug=$(tr <<<"$push_repo" '_' '-')
  local bk_slug_file="./.buildkite/slug"
  if [ -f "$bk_slug_file" ]; then
    bk_slug=$(cat "$bk_slug_file")
  fi

  # Our Buildkite project 'human'/display names are even more inconsistent and not machine-guessable;
  # default to a Rails-style `.titleize` of the slug just in case it's right.
  local bk_display_name=$(tr <<<"$push_repo" '-' ' ' | awk '{for(i=1;i<=NF;i++){ $i=toupper(substr($i,1,1)) substr($i,2) }}1')
  local bk_display_name_file="./.buildkite/display_name"
  if [ -f "$bk_display_name_file" ]; then
    bk_display_name=$(cat "$bk_display_name_file")
  fi

  if [ "$gh_org" != "$push_org" ]; then
    return # Not the org we want to keep track of; bail out.
  fi

  local branch=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD 2>/dev/null)
  local url_encoded_branch; url_encoded_branch=$(sed -e 's/\//%2F/g' <<<"$branch")

  if ! defaults read net.sourceforge.cruisecontrol.CCMenu Projects | grep -qF "$bk_display_name ($branch)"; then
    # Stop CCMenu while we tinker with it...
    pkill CCMenu

    # Remove the initial '(' line, then prepend the config block for the project to the list:
    defaults write net.sourceforge.cruisecontrol.CCMenu Projects "(
      { displayName = \"$bk_display_name ($branch)\";
        projectName = \"$bk_display_name ($branch)\";
        serverUrl = \"https://cc.buildkite.com/${bk_org}/${bk_slug}.xml?access_token=${bk_token}&branch=${url_encoded_branch}\";
      },
      $(defaults read net.sourceforge.cruisecontrol.CCMenu Projects | tail -n +2)
    "

    # Start it back up with the new settings.
    open -g /Applications/CCMenu.app
  fi
}

### Run ###
cc_menu "$@"
